steps:
- task: InstallAppleCertificate@2
  displayName: 'Install Apple certificate'
  inputs:
    certSecureFile: 'Rijksoverheid_iOS.p12'
    certPwd: '$(developerCertificatePassword)'                     
- task: InstallAppleCertificate@2
  displayName: 'Install Apple certificate'
  inputs:
    certSecureFile: 'Rijksoverheid_iOS_dev.p12'
    certPwd: '$(developerDevCertificatePassword)'                     
- script: 'curl -sL firebase.tools | bash'
  workingDirectory: '$(Agent.ToolsDirectory)'
  displayName: 'Install Firebase Tools'
- task: DownloadSecureFile@1
  displayName: Download Firebase credentials
  name: firebaseCredentials
  inputs:
    secureFile: firebase-credentials.json
- script: |
    echo "##vso[task.setvariable variable=GOOGLE_APPLICATION_CREDENTIALS]$(firebaseCredentials.secureFilePath)"
  displayName: Set Firebase credentials
- template: build.yml
  parameters:
    provisioningProfileSecureFile: CoronaMelder_Test.mobileprovision
    provisioningProfileName: "CoronaMelder_TST"
    networkConfiguration: Test
    logLevel: debug
    configuration: Debug
    bundleDisplayName: "üêû CoronaMelder"
    bundleShortVersion: tst
    debugMenu: true
    packageApp: true
    shareLogsEnabled: true
    exportPath: "ipa/test"
    exportMethod: "ad-hoc"
    enDeveloperRegion: "TEST_NL_TEST"
- publish: "ipa/test"
  displayName: Publish test IPA
  artifact: ipa-test
- script: |
    firebase appdistribution:distribute ipa/test/CoronaMelder.ipa \
    --app 1:937920499570:ios:3fa1c661e8189087f957eb \
    --release-notes "$BUILD_SOURCEVERSIONMESSAGE" \
    --groups ios-latest
  displayName: Distribute test build
- template: build.yml
  parameters:
    provisioningProfileSecureFile: CoronaMelder_Acceptance.mobileprovision
    provisioningProfileName: "CoronaMelder_ACC"
    networkConfiguration: ACC
    logLevel: debug
    bundleDisplayName: "Œ≤ CoronaMelder"
    bundleShortVersion: acc
    packageApp: true
    shareLogsEnabled: true
    exportPath: "ipa/acc"
    exportMethod: "ad-hoc"
    enDeveloperRegion: "TEST_NL_ACC"
- publish: "ipa/acc"
  displayName: Publish acceptance IPA
  artifact: ipa-acc
- script: |
    firebase appdistribution:distribute ipa/acc/CoronaMelder.ipa \
    --app 1:937920499570:ios:3fa1c661e8189087f957eb \
    --release-notes "$BUILD_SOURCEVERSIONMESSAGE" \
    --groups ios-acceptance
  displayName: Distribute acceptance build  
- template: build.yml
  parameters:
    provisioningProfileSecureFile: CoronaMelder_Production.mobileprovision
    provisioningProfileName: "CoronaMelder_PROD"
    networkConfiguration: Production
    logLevel: none
    bundleDisplayName: "CoronaMelder"
    packageApp: true
    exportPath: "ipa/prod"
    exportMethod: "app-store"
    enDeveloperRegion: "NL"
- publish: "ipa/prod"
  displayName: Publish production IPA
  artifact: ipa-prod
