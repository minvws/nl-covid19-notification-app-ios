# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  # - Testing 

  desc "Run tests for integration purposes"
  lane :test_ci do
    run_tests(
      device: "iPhone 13 Pro",
      scheme: "EN",
      force_quit_simulator: true,
      prelaunch_simulator: true
    )
  end


  # - Firebase deploy

  desc "Build and deploy via Firebase from CI"
  lane :deploy_ci do
    setup_ci(provider: "travis", force: true)
    prepare_certificate
    install_provisioning_profile(path: "fastlane/profiles/CoronaMelder_ACC.mobileprovision")


    build_ios_app(
      scheme: "EN",
      configuration: ENV["CONFIGURATION"],
      export_options: {
        method: "ad-hoc"
      }
    )

    firebase_app_distribution(
      app: "1:937920499570:ios:3fa1c661e8189087f957eb",
      groups: ENV["TEST_GROUP"],
      release_notes: ENV["RELEASE_NOTES"]
    )
  end

  # -- TestFlight --

  desc "Build and deploy production app to TestFlight"
  lane :deploy_to_appstore do
    setup_ci(provider: "travis", force: true)
    prepare_certificate
    install_provisioning_profile(path: "fastlane/profiles/CoronaMelder_PROD.mobileprovision")

    build_ios_app(
      scheme: "EN",
      configuration: "Release",
      export_options: {
        method: "app-store"
      }
    )

    app_store_connect_api_key(
      key_id: ENV['APP_STORE_API_KEY_ID'],
      issuer_id: ENV["APP_STORE_API_KEY_ISSUER"],
      key_filepath: "appstore-apikey.p8",
      duration: 1200,
    )

    upload_to_testflight(skip_submission: true)
  end

  private_lane :prepare_certificate do
  import_certificate(
    certificate_path: ENV["CERTIFICATE_PATH"],
    certificate_password: ENV["CERTIFICATE_PASSWORD"],
    keychain_name: ENV["MATCH_KEYCHAIN_NAME"],
    keychain_password: ""
  )
  end

end
